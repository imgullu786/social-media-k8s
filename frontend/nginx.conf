# /etc/nginx/conf.d/app.conf

gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_types
  text/plain text/css text/javascript application/javascript application/json
  application/xml image/svg+xml application/font-woff application/font-woff2
  font/ttf font/otf;

server {
  listen 80;
  # If you're accessing via NodePort (no DNS/Ingress), wildcard is fine:
  server_name _;  # or keep your domains if you terminate TLS/Ingress elsewhere

  root /usr/share/nginx/html;
  index index.html;

  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header Referrer-Policy no-referrer-when-downgrade always;

  # Health check
  location = /healthz {
    add_header Content-Type text/plain;
    return 200 "ok";
  }

  # Cache static assets (fingerprinted)
  location ~* \.(?:js|mjs|css|ico|png|jpg|jpeg|gif|svg|webp|ttf|otf|woff|woff2)$ {
    try_files $uri =404;
    access_log off;
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  # Never cache the SPA entrypoint
  location = /index.html {
    add_header Cache-Control "no-cache";
  }

  # SPA fallback
  location / {
    try_files $uri $uri/ /index.html;
  }

  # âœ… API reverse proxy: /api -> backend Service:5000
  # NOTE: keep trailing slash on both the location and proxy_pass
  location /api/ {
    proxy_pass http://backend:5000;  # <- fixed port

    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_connect_timeout 10s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;
  }

  location ^~ /socket.io/ {
    proxy_pass http://backend:5000/socket.io/;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;

    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_connect_timeout 10s;

    proxy_buffering off;
    proxy_cache_bypass $http_upgrade;
  }
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}
